.wrapper {
	padding: 15px 20px;
	border: 1px dashed #ff6c60;
}

.left {
	width: 120px;
	border: 5px solid #ddd;
}

.right {
	margin-left: 20px;
	border: 5px solid #ddd;
}

.wrapper {
	display: grid;
	grid-template-columns: 120px 1fr;
	align-items: start;
}

.wrapper .left,
.wrappre .right {
	box-sizing: border-box;
}

.wrapper .right {
	grid-column: 2;
}

/*

注意:

grid布局也有列等高的默认效果。需要设置: align-items: start;。

grid布局还有一个值得注意的小地方和flex不同:在使用margin-left的时候，grid布局默认是box-sizing设置的盒宽度之间的位置。
而flex则是使用两个div的border或者padding外侧之间的距离。*/


/*极限情况
最后可以再看一下在父容器极限小的情况下，不同方案的表现。主要分成四种情况：

(1)动态计算宽度的情况

两种方案: 双inline-block方案和双float方案。宽度极限小时，右侧的div宽度会非常小，由于遵循流动布局，所以右侧div会移动到下一行。

(2)动态计算右侧margin-left的情况

两种方案: float+margin-left方案和absolute+margin-left方案。宽度极限小时，由于右侧的div忽略了文档流中左侧div的存在，所以其依旧会存在于这一行，并被隐藏。

(3)float+BFC方案的情况

这种情况下，由于BFC与float的特殊关系，右侧div在宽度减小到最小后，也会掉落到下一行。

(4)flex和grid的情况

这种情况下，默认两种布局方式都不会放不下的div移动到下一行。不过 flex布局可以通过 flex-flow: wrap;来设置多余的div移动到下一行。 grid布局暂不支持。*/